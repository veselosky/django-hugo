# Generated by Django 5.2.1 on 2025-06-21 16:39

import django.db.models.deletion
import django.db.models.functions.comparison
import django_hugo.themes.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HugoTheme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the theme', max_length=255, unique=True, verbose_name='name')),
                ('relative_dir', models.CharField(help_text='Relative path to the theme directory under HUGO_THEMES_ROOT', max_length=255, unique=True, verbose_name='relative directory')),
                ('description', models.TextField(blank=True, help_text='Optional description of the Hugo theme', verbose_name='description')),
                ('thumbnail', models.ImageField(help_text='thumbnail image for the theme (900x600px)', upload_to=django_hugo.themes.models.theme_images_upload_to, verbose_name='thumbnail')),
                ('screenshot', models.ImageField(help_text='screenshot image for the theme (1500x1000px)', upload_to=django_hugo.themes.models.theme_images_upload_to, verbose_name='screenshot')),
                ('demosite', models.URLField(blank=True, verbose_name='demo site')),
                ('active', models.BooleanField(default=True, help_text='If active, this theme can be used by Hugo sites', verbose_name='active')),
            ],
            options={
                'verbose_name': 'Hugo Theme',
                'verbose_name_plural': 'Hugo Themes',
            },
        ),
        migrations.CreateModel(
            name='HugoSite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Administrative name for the Hugo site (not used in Hugo)', max_length=255, verbose_name='name')),
                ('slug', models.SlugField(help_text='Slug for the Hugo site (the name of the directory under HUGO_SITE_ROOT)', verbose_name='slug')),
                ('base_url', models.URLField(blank=True, help_text='Base URL for the Hugo site (used in metadata and links)', verbose_name='base URL')),
                ('title', models.CharField(help_text='Title of the Hugo site (used in the site header and metadata)', max_length=255, verbose_name='title')),
                ('description', models.TextField(blank=True, help_text='Optional description of the Hugo site', verbose_name='description')),
                ('copyright', models.CharField(blank=True, help_text='Optional copyright notice for the Hugo site', max_length=255, verbose_name='copyright')),
                ('pager_size', models.PositiveIntegerField(default=10, help_text='Number of items per page in paginated lists', verbose_name='items per page')),
                ('enable_emoji', models.BooleanField(default=True, help_text='Enable emoji shortcodes like :smiley: in content', verbose_name='enable emoji')),
                ('enable_robots', models.BooleanField(default=True, help_text='Generate robots.txt to control search engine indexing', verbose_name='generate robots.txt')),
                ('date_published', models.DateTimeField(blank=True, help_text='The last time this site was published', null=True)),
                ('date_modified', models.DateTimeField(blank=True, help_text="The last time this site's content was modified", null=True)),
                ('is_archived', models.BooleanField(default=False, help_text='Indicates if the site is archived and not actively used')),
                ('has_unpublished_changes', models.GeneratedField(db_persist=True, expression=models.ExpressionWrapper(models.Q(('date_modified__gt', django.db.models.functions.comparison.Coalesce('date_published', models.Value('1970-01-01T00:00:00Z')))), output_field=models.BooleanField()), help_text='Indicates if the site has unpublished changes', output_field=models.BooleanField(verbose_name='has unpublished changes'))),
                ('user', models.ForeignKey(help_text='The user who owns this Hugo site', on_delete=django.db.models.deletion.CASCADE, related_name='hugo_sites', to=settings.AUTH_USER_MODEL)),
                ('theme', models.ForeignKey(help_text='The Hugo theme used by this site', on_delete=django.db.models.deletion.PROTECT, related_name='hugo_sites', to='django_hugo.hugotheme', verbose_name='theme')),
            ],
            options={
                'verbose_name': 'Hugo Site',
                'verbose_name_plural': 'Hugo Sites',
                'constraints': [models.UniqueConstraint(fields=('user', 'slug'), name='unique_user_slug')],
            },
        ),
    ]
